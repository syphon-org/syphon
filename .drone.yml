kind: pipeline
type: docker
name: linux build dev
trigger:
  event:
    - push
steps:
  - name: build linux
    image: cirrusci/flutter:2.2.2
    commands:
      # Install dependencies
      - apt-get update -y
      - apt-get install -y cmake ninja-build clang pkg-config libgtk-3-dev liblzma-dev libblkid-dev libsecret-1-dev libolm-dev libolm3 libsqlite3-dev libjsoncpp-dev
      - git submodule update --init --recursive
      # Set up flutter config
      - flutter config --no-analytics
      - flutter pub get
      - flutter pub run build_runner build --delete-conflicting-outputs
      - flutter config --enable-linux-desktop
      # Build the linux app exec
      - flutter build linux -v --release
      - tar -cvzf syphon.linux.x64.tar.gz -C build/linux/x64/release/bundle .

  - name: release linux
    image: golang:1.13
    environment:
      GITEA_SERVER_TOKEN:
        from_secret: GITEA_API_TOKEN
    commands:
      # Create a build timestamp for the release title
      - echo $(date -Iseconds) > BUILD_START_TIME
      - go get code.gitea.io/tea
      - go install code.gitea.io/tea
      - tea login add -u https://git.syphon.org
      - tea release create --tag "${DRONE_BRANCH}-$(echo $DRONE_COMMIT_SHA | cut -c1-7)-linux" --target ${DRONE_COMMIT_SHA} --repo syphon-org/syphon --title "${DRONE_BRANCH}-$(echo $DRONE_COMMIT_SHA | cut -c1-7)" --asset ./syphon.linux.x64.tar.gz
---
kind: pipeline
type: docker
name: android build dev
trigger:
  event:
    - push
steps:
  - name: build android
    image: cirrusci/flutter:2.2.2
    commands:
      # Keep track of the time when build was started
      - echo $(date -Iseconds) > BUILD_START_TIME
      # Environment variables
      - export DEBIAN_FRONTEND=noninteractive
      - export ANDROID_NDK_HOME=/opt/android-sdk-linux/ndk-bundle/
      # Install dependencies (git should be pre-installed)
      - apt-get update && apt-get install --no-install-recommends -y cmake ninja-build
      - git submodule update --init --recursive
      - sdkmanager "ndk-bundle"
      # Set up flutter
      - flutter config --no-analytics
      - flutter pub get
      - flutter pub run build_runner build --delete-conflicting-outputs
      # Modify gradle build script (remove/change parts which don't work in this environment)
      - sed -i '/keystoreProperties\[/d' android/app/build.gradle
      - sed -i 's/version "3.10.2"/version "3.7.0+"/g' android/app/build.gradle
      - sed -i 's/signingConfig signingConfigs.release/signingConfig signingConfigs.debug/g' android/app/build.gradle
      # Modify package and app name to allow for installing alongside normal Syphon
      - sed -i 's/android:label="Syphon"/android:label="Syphon Nightly"/g' android/app/src/main/AndroidManifest.xml
      - sed -i 's/applicationId "org.tether.tether"/applicationId "org.syphon.syphon.nightly"/g' android/app/build.gradle
      # Modify the default ic_launcher to the nightly version
      - sed -i 's/ic_launcher_background">#34C7B5/ic_launcher_background">#161616/g' android/app/src/main/res/values/colors.xml
      # Build the APK
      - flutter build apk
      - cp build/app/outputs/flutter-apk/app-release.apk ./syphon.android.apk

  - name: release android
    image: golang:1.13
    environment:
      GITEA_SERVER_TOKEN:
        from_secret: GITEA_API_TOKEN
    commands:
      # Modify the existing release and add the android apk
      - go get code.gitea.io/tea
      - go install code.gitea.io/tea
      - tea login add -u https://git.syphon.org
      - tea release create --tag "${DRONE_BRANCH}-$(echo $DRONE_COMMIT_SHA | cut -c1-7)-android" --target ${DRONE_COMMIT_SHA} --repo syphon-org/syphon --title "${DRONE_BRANCH}-$(echo $DRONE_COMMIT_SHA | cut -c1-7)" --asset ./syphon.android.apk
